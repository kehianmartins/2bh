/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Formularios;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author kehian
 */
public class frmFicheros extends javax.swing.JFrame {

    private File fichero = null;
    
    private transient FileWriter escribir = null;
    private transient PrintWriter pwEscribir = null;
    
    private transient FileReader leer = null;
    private transient BufferedReader buffer = null;
    
    private final String OS = System.getProperty("os.name").toLowerCase();
    private final String HOME_USUARIO = System.getProperty("user.home");
    
    private String rutaArchivo = "a";
            
            
    
    
    
    public frmFicheros() {
        initComponents();
        
        if(OS.contains("win")) {
                rutaArchivo = HOME_USUARIO + "\\Desktop\\archivo.txt";
            } else {
                rutaArchivo = HOME_USUARIO + "/Documentos/archivo.txt";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnEscribir = new javax.swing.JButton();
        btnLeer = new javax.swing.JButton();
        btnAñadir = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtArea.setColumns(20);
        txtArea.setRows(5);
        txtArea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(txtArea);

        jLabel1.setBackground(new java.awt.Color(0, 153, 255));
        jLabel1.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Campo de Texto");
        jLabel1.setOpaque(true);

        btnEscribir.setText("Escribir");
        btnEscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEscribirActionPerformed(evt);
            }
        });

        btnLeer.setText("Leer");
        btnLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeerActionPerformed(evt);
            }
        });

        btnAñadir.setText("Añadir");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar área de texto");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEscribir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLeer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAñadir, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLeer, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>                        

    private void btnEscribirActionPerformed(java.awt.event.ActionEvent evt) {                                            
        try {
            fichero =  new File(rutaArchivo);
            escribir = new FileWriter(fichero);
            pwEscribir = new PrintWriter(escribir);
            
            pwEscribir.print(txtArea.getText());
            pwEscribir.flush();
            pwEscribir.close();
            
            txtArea.setText("");
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, 
                        "Acurrió un error al leer el archivo.\n Error: " + e.getMessage(), 
                        "Error", 
                        JOptionPane.INFORMATION_MESSAGE);
        } finally {
            try {
                if(fichero != null) {
                escribir.close();
                fichero = null;
            }
            } catch (IOException e2) {
                JOptionPane.showMessageDialog(rootPane, 
                        "Acurrió un error al leer el archivo.\n Error: " + e2.getMessage(), 
                        "Error", 
                        JOptionPane.INFORMATION_MESSAGE);
            }
            
        }
    }                                           

    private void btnLeerActionPerformed(java.awt.event.ActionEvent evt) {                                        
        
        fichero =  new File(rutaArchivo);
        
        if(fichero.exists()) {
            try {
            leer = new FileReader(fichero);
            buffer = new BufferedReader(leer);
            
            String linea;
            String texto = "";
            
            try {
                while ( null != (linea = buffer.readLine())) {
                    texto += linea + "\n";
                }
                
                txtArea.setText(texto);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, 
                        "Acurrió un error al leer el archivo.\nError: " + ex.getMessage(), 
                        "Error", 
                        JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, 
                        "Acurrió un error al leer el archivo.\nError: " + e.getMessage(), 
                        "Error", 
                        JOptionPane.INFORMATION_MESSAGE);
        }
        } else {
            JOptionPane.showMessageDialog(rootPane, 
                        "No se encontró el archivo.",
                        "Error", 
                        JOptionPane.INFORMATION_MESSAGE);
        }
    }                                       

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {                                          
        try {
            fichero =  new File(rutaArchivo);
            escribir = new FileWriter(fichero, true);
            pwEscribir = new PrintWriter(escribir);
            
            pwEscribir.print("\n" + txtArea.getText());
            pwEscribir.flush();
            pwEscribir.close();
            
            txtArea.setText("");
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(rootPane, 
                        "Acurrió un error al leer el archivo.\n Error: " + e.getMessage(), 
                        "Error", 
                        JOptionPane.INFORMATION_MESSAGE);
        } finally {
            try {
                if(fichero != null) {
                escribir.close();
                fichero = null;
            }
            } catch (IOException e2) {
                JOptionPane.showMessageDialog(rootPane, 
                        "Acurrió un error al leer el archivo.\n Error: " + e2.getMessage(), 
                        "Error", 
                        JOptionPane.INFORMATION_MESSAGE);
            }
            
        }
    }                                         

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {                                           
        txtArea.setText("");
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmFicheros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmFicheros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmFicheros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmFicheros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmFicheros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnEscribir;
    private javax.swing.JButton btnLeer;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtArea;
    // End of variables declaration                   
}
